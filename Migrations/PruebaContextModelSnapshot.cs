// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrabajadoresPrueba.Data.Context;

#nullable disable

namespace TrabajadoresPrueba.Migrations
{
    [DbContext(typeof(PruebaContext))]
    partial class PruebaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TrabajadoresPrueba.Data.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NombreDepartamento")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Departamento", (string)null);
                });

            modelBuilder.Entity("TrabajadoresPrueba.Data.Models.Distrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("NombreDistrito")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Distrito", (string)null);
                });

            modelBuilder.Entity("TrabajadoresPrueba.Data.Models.Provincium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("IdDepartamento")
                        .HasColumnType("int");

                    b.Property<string>("NombreProvincia")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartamento");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("TrabajadoresPrueba.Data.Models.Trabajadore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("IdDepartamento")
                        .HasColumnType("int");

                    b.Property<int?>("IdDistrito")
                        .HasColumnType("int");

                    b.Property<int?>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("TipoDocumento")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("IdDistrito");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Trabajadores");
                });

            modelBuilder.Entity("TrabajadoresPrueba.Data.Models.Distrito", b =>
                {
                    b.HasOne("TrabajadoresPrueba.Data.Models.Provincium", "IdProvinciaNavigation")
                        .WithMany("Distritos")
                        .HasForeignKey("IdProvincia")
                        .HasConstraintName("FK__Distrito__IdProv__2A4B4B5E");

                    b.Navigation("IdProvinciaNavigation");
                });

            modelBuilder.Entity("TrabajadoresPrueba.Data.Models.Provincium", b =>
                {
                    b.HasOne("TrabajadoresPrueba.Data.Models.Departamento", "IdDepartamentoNavigation")
                        .WithMany("Provincia")
                        .HasForeignKey("IdDepartamento")
                        .HasConstraintName("FK__Provincia__IdDep__2B3F6F97");

                    b.Navigation("IdDepartamentoNavigation");
                });

            modelBuilder.Entity("TrabajadoresPrueba.Data.Models.Trabajadore", b =>
                {
                    b.HasOne("TrabajadoresPrueba.Data.Models.Departamento", "IdDepartamentoNavigation")
                        .WithMany("Trabajadores")
                        .HasForeignKey("IdDepartamento")
                        .HasConstraintName("FK__Trabajado__IdDep__2C3393D0");

                    b.HasOne("TrabajadoresPrueba.Data.Models.Distrito", "IdDistritoNavigation")
                        .WithMany("Trabajadores")
                        .HasForeignKey("IdDistrito")
                        .HasConstraintName("FK__Trabajado__IdDis__2D27B809");

                    b.HasOne("TrabajadoresPrueba.Data.Models.Provincium", "IdProvinciaNavigation")
                        .WithMany("Trabajadores")
                        .HasForeignKey("IdProvincia")
                        .HasConstraintName("FK__Trabajado__IdPro__2E1BDC42");

                    b.Navigation("IdDepartamentoNavigation");

                    b.Navigation("IdDistritoNavigation");

                    b.Navigation("IdProvinciaNavigation");
                });

            modelBuilder.Entity("TrabajadoresPrueba.Data.Models.Departamento", b =>
                {
                    b.Navigation("Provincia");

                    b.Navigation("Trabajadores");
                });

            modelBuilder.Entity("TrabajadoresPrueba.Data.Models.Distrito", b =>
                {
                    b.Navigation("Trabajadores");
                });

            modelBuilder.Entity("TrabajadoresPrueba.Data.Models.Provincium", b =>
                {
                    b.Navigation("Distritos");

                    b.Navigation("Trabajadores");
                });
#pragma warning restore 612, 618
        }
    }
}
